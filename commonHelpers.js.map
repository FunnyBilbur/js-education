{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\n// function sum(a) {\n\n//     return function (b) {\n//         return `${a} + ${b} = ${a + b}`; // берёт \"a\" из внешнего лексического окружения\n//     };\n\n// }\n\n// console.log(sum(5)(10));\n// console.log(sum(15)(110));\n\n// let x = 1;\n// function func() {\n//     console.log(x); // ReferenceError: Cannot access 'x' before initialization\n//     let x = 2;\n// }\n// func();\n\n// function inBetween(a, b) {\n//     // let c = 0;\n//     return function (number) {\n//         return number >= a && number <= b;\n//     };\n\n// }\n\n// function inArray(arr) {\n//     return function (number) {\n//         return arr.includes(number);\n//     };\n// }\n// let arr = [1, 2, 3, 4, 5, 6, 7];\n// console.log(arr.filter((number) => number > 3));\n// console.log(arr.filter(inBetween(3, 6)));\n// console.log(arr.filter(inArray([3, 6])));\n// console.log(arr.filter(inBetween(3, 6))); // 3,4,5,6\n// console.log(arr.filter(inArray([1, 2, 10]))); // 1,2\n\n\n// function makeAdder(x) {\n//     return function (y) {\n//         return x + y;\n//     };\n// }\n\n// var add5 = makeAdder(5);\n// var add10 = makeAdder(10);\n\n// console.log(add5(2)); // 7\n// console.log(add10(2)); // 12\n\n// console.group('Bio:');\n// console.log('My name is Kolade');\n// console.warn(\"I don't like to be late\");\n// console.error('You came late');\n// console.groupEnd();\n\nconst styles = `padding: 15px;\n                background-color: #bcdb58;\n                color: black`;\n\nconsole.log('%c Hello, Everyone!', styles);\n\n\nlet searchParams = new URLSearchParams({\n    key: \"41527522-465889db431a6a06c19f4d10b\",\n    image_type: \"photo\",\n    orientation: \"horizontal\",\n    safesearch: true,\n});\n\n\nconst fetchUsers = async () => {\n    try {\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n        return response.data;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n\n// fetchUsers().then(result => console.log(result)).catch(error => console.log(error));\n\n\n// https://newsapi.org/docs/get-started\n// Your API key is: 499dfc64c0224a4895abf0e01e499bc7\n\n\nconst foo = async () => {\n    console.log(\"Before await\");\n\n    const promiseValue = await new Promise(resolve => {\n        setTimeout(() => resolve(\"second\"), 1000)\n    });\n\n    console.log(\"After await 1\", promiseValue);\n};\n\nfoo(); // через 2 секунди виведеться в консоль  \"After await\" 5\n\n// console.log(\"two\" / \"2\");\n\n// let kro = 5;\n// console.log(Number.isNaN(kro));\n\n// console.log('---');\n\n// console.log(\"5\" == 5);\n// console.log('5' === 5);\n\n// const A = {\n//     con: \"string\",\n//     i: 5,\n// };\n\n// const B = {\n//     con: \"string\",\n//     i: 5,\n// };\n\n// console.log(JSON.stringify(A) == JSON.stringify(B));\n// console.log(A === B);\n\n// console.log(\"isArray? \", Array.isArray(A));\n\n\n// const words = ['spray', 'elite', 'exuberant', 'destruction', 'present'];\n\n// const result = words.filter((word) => word.length > 8);\n\n// console.log(words);\n// console.log(result);\n\n// function isBigEnough(element, index, array) {\n//     return element >= 10;\n// }\n// console.log([12, 5, 8, 130, 44]);\n// console.log(\"Every more than 1? - \", [12, 5, 8, 130, 44].every((element) => element >= 1));\n// console.log(\"Every more than 50? - \", [12, 54, 18, 130, 44].every((element) => element >= 50));\n// console.log(\"Some more than 50? - \", [12, 5, 8, 130, 44].some((element) => element >= 50));\n// console.log(\"Some more than 500? - \", [12, 54, 18, 130, 44].some((element) => element >= 500));\n\n// const numbers = [1, 4, 9];\n// const doubles = numbers.map((num) => num * 2);\n// console.log(numbers, doubles);\n\n\n// const array1 = [1, 2, 3, 4];\n\n// const sumWithInitial = array1.reduce(\n//     (accumulator, currentValue) => accumulator + currentValue\n// );\n// console.log(sumWithInitial);\n// Expected output: 10\n\n\n// const i = [0, 1, 2, 3, 4].reduce(function (previousValue, currentValue, index, array) {\n//     return previousValue + currentValue;\n// });\n// console.log(i);\n\n\n\n// const array1 = [5, 44, 33, 12, 1, 2, 3, 4];\n// const array2 = [5, 44];\n// console.log(array1);\n// console.log(array1.sort((a, b) => { return a - b }));\n// console.log(array1.sort((a, b) => { return b - a }));\n\n\n// function Product(name, price) {\n//     this.name = name;\n//     this.price = price;\n\n//     if (price < 0) {\n//         throw RangeError(\n//             \"Нельзя создать продукт \" + this.name + \" с отрицательной ценой\",\n//         );\n//     }\n// }\n\n// function Food(name, price) {\n//     Product.apply(this, [name, price]);\n//     this.category = \"еда\";\n// }\n\n// Food.prototype = Object.create(Product.prototype);\n\n// function Toy(name, price) {\n//     Product.call(this, name, price);\n//     this.category = \"игрушка\";\n// }\n\n// Toy.prototype = Object.create(Product.prototype);\n\n// var cheese = new Food(\"фета\", 5);\n// var fun = new Toy(\"робот\", 40);\n\n// console.log(cheese);\n// console.log(fun);\n\n// function Car(make, model, year) {\n//     this.make = make;\n//     this.model = model;\n//     this.year = year;\n// }\n// var mycar = new Car(\"Honda\", \"Accord\", 1998);\n// var a = mycar instanceof Car; // возвращает true\n// var b = mycar instanceof Object; // возвращает true\n\n// let lord = { car: [5, 4, 1, 53] };\n// console.log(...lord.car);\n\n\n"],"names":["styles","foo","promiseValue","resolve"],"mappings":"ssBA0DA,MAAMA,EAAS;AAAA;AAAA,8BAIf,QAAQ,IAAI,sBAAuBA,CAAM,EAGtB,IAAI,gBAAgB,CACnC,IAAK,qCACL,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAC,EAoBD,MAAMC,EAAM,SAAY,CACpB,QAAQ,IAAI,cAAc,EAE1B,MAAMC,EAAe,MAAM,IAAI,QAAQC,GAAW,CAC9C,WAAW,IAAMA,EAAQ,QAAQ,EAAG,GAAI,CAChD,CAAK,EAED,QAAQ,IAAI,gBAAiBD,CAAY,CAC7C,EAEAD"}